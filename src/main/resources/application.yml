spring:
  application:
    name: chatai

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate.default_batch_fetch_size: 100

# OpenAI 설정 (개발용 기본값)
openai:
  api-key: ${OPENAI_API_KEY:mock-api-key}
  model: ${OPENAI_MODEL:gpt-3.5-turbo}

logging:
  level:
    io.github.chatai: DEBUG

---
spring.config.activate.on-profile: local

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  h2:
    console:
      enabled: true
  datasource:
    driver-class-name: org.h2.Driver
    hikari:
      jdbc-url: jdbc:h2:mem:core;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa

---
spring.config.activate.on-profile: dev

spring:
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        show_sql: false
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      jdbc-url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/chatai_dev}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:password}

logging:
  level:
    io.github.chatai: INFO

---
spring.config.activate.on-profile: production

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: false
        show_sql: false
  h2:
    console:
      enabled: false  # production에서는 콘솔 비활성화
  datasource:
    driver-class-name: org.h2.Driver
    hikari:
      jdbc-url: jdbc:h2:mem:chatai_prod;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa

# Production OpenAI 설정 (환경변수에서 로드)
openai:
  api-key: ${OPENAI_API_KEY}
  model: ${OPENAI_MODEL:gpt-4}

logging:
  level:
    io.github.chatai: INFO
    org.springframework: WARN
    org.hibernate: WARN

---
spring.config.activate.on-profile: samsung

client:
  name: samsung

# 삼성 전용 OpenAI 설정
clients:
  samsung:
    openai:
      api-key: ${SAMSUNG_OPENAI_API_KEY:sk-samsung-specific-key-here}
      model: gpt-4-turbo
      base-url: https://api.openai.com/v1/chat/completions

logging:
  level:
    io.github.chatai: DEBUG

server:
  port: 8080

---
spring.config.activate.on-profile: lg

client:
  name: lg

# LG 전용 OpenAI 설정
clients:
  lg:
    openai:
      api-key: ${LG_OPENAI_API_KEY:sk-lg-specific-key-here}
      model: gpt-3.5-turbo
      base-url: https://api.openai.com/v1/chat/completions

logging:
  level:
    io.github.chatai: INFO

server:
  port: 8081

---
spring.config.activate.on-profile: sk

client:
  name: sk

# SK 전용 OpenAI 설정
clients:
  sk:
    openai:
      api-key: ${SK_OPENAI_API_KEY:sk-sk-telecom-key-here}
      model: gpt-4
      base-url: https://api.openai.com/v1/chat/completions

logging:
  level:
    io.github.chatai: WARN

server:
  port: 8082
